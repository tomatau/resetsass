//////////////////////////////////
// Parsing                      //
//     e.g. remove px from 17px //
//////////////////////////////////

// convert to num
@function strip-units($num) {
    @return $num / ($num * 0 + 1);
}

// restrict number
@function clamp($value, $min, $max) {
    @return if($value > $max, $max, if($value < $min, $min, $value));
}

// int to english word
@function num-to-string($int) {
    // set up lists
    $ones: "one", "two", "three", "four", "five", "six", "seven", "eight", "nine";
    $teens: "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen";
    $tens: "", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety";

    $int: abs($int); // no nonnegative numbers
    $number: "";
    $temp: $int / 10;
    $temp: floor($temp);
    @if($int >= 1 and $int <= 100) {
        @if($temp < 1) { // it's a one!
            $number: nth($ones, $int % 10);
        }
        @if($temp == 1) { // in the teen range
            @if($int % 10 == 0) {
                $number: "ten";
            } @else {
                $number: nth($teens, $int % 10);
            }
        }
        @if($temp >= 2 and $temp <= 9) { // more than our teens
            @if($int % 10 == 0) {
                // means it's a number evenly divisible by 10
                $number: nth($tens, $int / 10);
            } @else {
                $number: "#{nth($tens, floor($int / 10))}-#{nth($ones, $int % 10)}";
            }
        }
        @if($temp == 10) { // this is the end...
            $number: "one-hundred";
        }
    } @else {
        $number: "Invalid parameter passed. Number must be between 1 and 100."
    }
    @return $number;
}

// make a string from a list
@function list-to-string($list, $glue: '', $is-nested: false) {
    $result: null;
    @for $i from 1 through length($list) {
        $e: nth($list, $i);
        $result: if(
            $i != length($list),
            $result#{$e}#{$glue}, 
            $result#{$e}
        );
    }
    @return $result;
}

// random colour
@function rand-col(){
    @return rgb(random(180) + 70, random(180) + 70, random(180) + 70);
}

// get list value by name
// $list = (1 'name', 2 'name')
@function by-name($target, $list){
    @each $item in $list {
        $query: nth($item, 1);
        $name: nth($item, 2);
        @if ($name == $target) {
            @return $query;
        }
    }
    @return "";
}