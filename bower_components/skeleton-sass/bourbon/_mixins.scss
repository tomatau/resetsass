// See skeleton file for copyright info

@import "dependencies"; // don't remove me
@import "functions";	// your custom functions

// ---------- ADD CUSTOM MIXINS BELOW HERE
// @mixin myMixin() { }

// @see https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow
// box-shadow ( [ none | inset? && [ <offset-x> <offset-y> <blur-radius>? <spread-radius>? <color>? ] ] ])
@mixin box_shadow($shadow) {
	@include prefixer(box-shadow, $shadow, webkit moz ms o spec);
}

@mixin border-radius($radii...) {
	@include prefixer(border-radius, $radii, webkit moz ms o spec);
}

// filter-gradient ( color $start, [ color $stop: false, [ string $direction: false ] ] )
@mixin filter-gradient($start, $stop: false, $direction: false) {
	$direction: unquote($direction);
	$type: false;
	@if(unquote($start) != none) {
		*zoom: 1;
		filter: progid:DXImageTransform.Microsoft.gradient(gradientType=0, startColorstr='#{ie-hex-str($start)}', endColorstr='#{ie-hex-str($stop)}');
	} @else {
		$stop: null;
		$direction: null;
		// see http://stackoverflow.com/questions/1768161/how-do-i-reset-or-override-ie-css-filters
		filter: "progid:DXImageTransform.Microsoft.gradient(enabled=false)";
	}
}

@mixin reset-box-model {
	margin: 0;
	padding: 0;
	border: 0;
}

@mixin reset-font {
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}

@mixin reset-focus {
	outline: 0;
}

@mixin reset-body {
	line-height: 1;
}

@mixin reset-list-style {
	list-style: none;
}

@mixin reset-table {
	border: {
		collapse: collapse;
		spacing: 0;
	}
}

@mixin reset-table-cell {
	text-align: left;
	font-weight: normal;
	vertical-align: middle;
}

@mixin reset-quotation {
	quotes: none;
	&:before, &:after {
		content: "";
		content: none;
	}
}

@mixin reset-image-anchor-border {
	border: none;
}

@mixin reset-html5 {
	/* HTML5 display-role reset for older browsers */
	article, aside, details, figcaption, figure,
	footer, header, hgroup, menu, nav, section { display: block; }
}

@mixin global-reset {
	html, body, div, span, applet, object, iframe,
	h1, h2, h3, h4, h5, h6, p, blockquote, pre,
	a, abbr, acronym, address, big, cite, code,
	del, dfn, em, img, ins, kbd, q, s, samp,
	small, strike, strong, sub, sup, tt, var,
	b, u, i, center,
	dl, dt, dd, ol, ul, li,
	fieldset, form, label, legend,
	table, caption, tbody, tfoot, thead, tr, th, td,
	article, aside, canvas, details, embed,
	figure, figcaption, footer, header, hgroup,
	menu, nav, output, ruby, section, summary,
	time, mark, audio, video {
		@include reset-box-model;
		@include reset-font;
	}
	@include reset-html5;
	body { @include reset-body; }
	ol, ul { @include reset-list-style; }
	blockquote, q { @include reset-quotation; }
	table {
		@include reset-table;
	}
}

@mixin nested-reset {
	div, span, applet, object, iframe,
	h1, h2, h3, h4, h5, h6, p, blockquote, pre,
	a, abbr, acronym, address, big, cite, code,
	del, dfn, em, img, ins, kbd, q, s, samp,
	small, strike, strong, sub, sup, tt, var,
	b, u, i, center,
	dl, dt, dd, ol, ul, li,
	fieldset, form, label, legend,
	table, caption, tbody, tfoot, thead, tr, th, td,
	article, aside, canvas, details, embed,
	figure, figcaption, footer, header, hgroup,
	menu, nav, output, ruby, section, summary,
	time, mark, audio, video {
		@include reset-box-model;
		@include reset-font;
	}
	ol, ul { @include reset-list-style; }
	blockquote, q { @include reset-quotation; }
	caption, th, td { @include reset-table-cell; }
	table { @include reset-table; }
	a img { @include reset-image-anchor-border; }
}

// grid ( [ number $width: 960px, [ bool $fluid: false, [  number $gutterWidth: 20px, [ number $colCount: 16 ] ] ] ] )
@mixin grid($width: $baseWidth, $fluid: $isFluid, $gutterWidth: $baseGutterWidth, $colCount: $baseColCount) {
	@if ( $fluid == true ) {
		@include _fluidGrid($colCount);
	} @else {
		// we no longer need to set a value for $colWdith because it is generated dynamically right here!
		// @see https://github.com/atomicpages/skeleton-sass/issues/7
		$colWidth: ($width / $colCount) - $gutterWidth;
		@include _fixedGrid($width, $colWidth, $gutterWidth, $colCount);
	}
}

// mobileGrid ( [ number $width: 960px, [ number $colCount: 16 ]  ] )
@mixin mobileGrid($width: $baseWidth, $colCount: $baseColCount) {
	@include _mobileGrid($width, $colCount);
}
